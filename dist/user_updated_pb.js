/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.roadmunk.UserUpdatedMessage', null, global);
goog.exportSymbol('proto.roadmunk.UserUpdatedMessage.OnboardingFlag', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.roadmunk.UserUpdatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.roadmunk.UserUpdatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.roadmunk.UserUpdatedMessage.displayName = 'proto.roadmunk.UserUpdatedMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.roadmunk.UserUpdatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.roadmunk.UserUpdatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.roadmunk.UserUpdatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.roadmunk.UserUpdatedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    email: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hasVerifiedEmail: jspb.Message.getFieldWithDefault(msg, 7, false),
    jobTitle: jspb.Message.getFieldWithDefault(msg, 8, ""),
    avatarImage: jspb.Message.getFieldWithDefault(msg, 9, ""),
    accountRole: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inactiveOn: jspb.Message.getFieldWithDefault(msg, 11, ""),
    onboardingFlags: (f = msg.getOnboardingFlags()) && proto.roadmunk.UserUpdatedMessage.OnboardingFlag.toObject(includeInstance, f),
    invitedBy: jspb.Message.getFieldWithDefault(msg, 13, ""),
    defaultAuthenticationProviderType: jspb.Message.getFieldWithDefault(msg, 14, ""),
    deployment: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.roadmunk.UserUpdatedMessage}
 */
proto.roadmunk.UserUpdatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.roadmunk.UserUpdatedMessage;
  return proto.roadmunk.UserUpdatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.roadmunk.UserUpdatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.roadmunk.UserUpdatedMessage}
 */
proto.roadmunk.UserUpdatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasVerifiedEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobTitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarImage(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountRole(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInactiveOn(value);
      break;
    case 12:
      var value = new proto.roadmunk.UserUpdatedMessage.OnboardingFlag;
      reader.readMessage(value,proto.roadmunk.UserUpdatedMessage.OnboardingFlag.deserializeBinaryFromReader);
      msg.setOnboardingFlags(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvitedBy(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultAuthenticationProviderType(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeployment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.roadmunk.UserUpdatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.roadmunk.UserUpdatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.roadmunk.UserUpdatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.roadmunk.UserUpdatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHasVerifiedEmail();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getJobTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAvatarImage();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAccountRole();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInactiveOn();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOnboardingFlags();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.roadmunk.UserUpdatedMessage.OnboardingFlag.serializeBinaryToWriter
    );
  }
  f = message.getInvitedBy();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDefaultAuthenticationProviderType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getDeployment();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.roadmunk.UserUpdatedMessage.OnboardingFlag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.roadmunk.UserUpdatedMessage.OnboardingFlag.displayName = 'proto.roadmunk.UserUpdatedMessage.OnboardingFlag';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.prototype.toObject = function(opt_includeInstance) {
  return proto.roadmunk.UserUpdatedMessage.OnboardingFlag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.roadmunk.UserUpdatedMessage.OnboardingFlag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentSignupStep: jspb.Message.getFieldWithDefault(msg, 1, ""),
    forceAttachSaml: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.roadmunk.UserUpdatedMessage.OnboardingFlag}
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.roadmunk.UserUpdatedMessage.OnboardingFlag;
  return proto.roadmunk.UserUpdatedMessage.OnboardingFlag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.roadmunk.UserUpdatedMessage.OnboardingFlag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.roadmunk.UserUpdatedMessage.OnboardingFlag}
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentSignupStep(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceAttachSaml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.roadmunk.UserUpdatedMessage.OnboardingFlag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.roadmunk.UserUpdatedMessage.OnboardingFlag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentSignupStep();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getForceAttachSaml();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string current_signup_step = 1;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.prototype.getCurrentSignupStep = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.prototype.setCurrentSignupStep = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool force_attach_saml = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.prototype.getForceAttachSaml = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.roadmunk.UserUpdatedMessage.OnboardingFlag.prototype.setForceAttachSaml = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setAccount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setFirstName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string last_name = 4;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setLastName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string phone_number = 5;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setPhoneNumber = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string email = 6;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool has_verified_email = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getHasVerifiedEmail = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.roadmunk.UserUpdatedMessage.prototype.setHasVerifiedEmail = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string job_title = 8;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getJobTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setJobTitle = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string avatar_image = 9;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getAvatarImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setAvatarImage = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string account_role = 10;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getAccountRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setAccountRole = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string inactive_on = 11;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getInactiveOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setInactiveOn = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional OnboardingFlag onboarding_flags = 12;
 * @return {?proto.roadmunk.UserUpdatedMessage.OnboardingFlag}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getOnboardingFlags = function() {
  return /** @type{?proto.roadmunk.UserUpdatedMessage.OnboardingFlag} */ (
    jspb.Message.getWrapperField(this, proto.roadmunk.UserUpdatedMessage.OnboardingFlag, 12));
};


/** @param {?proto.roadmunk.UserUpdatedMessage.OnboardingFlag|undefined} value */
proto.roadmunk.UserUpdatedMessage.prototype.setOnboardingFlags = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.roadmunk.UserUpdatedMessage.prototype.clearOnboardingFlags = function() {
  this.setOnboardingFlags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.roadmunk.UserUpdatedMessage.prototype.hasOnboardingFlags = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string invited_by = 13;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getInvitedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setInvitedBy = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional string default_authentication_provider_type = 14;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getDefaultAuthenticationProviderType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setDefaultAuthenticationProviderType = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional string deployment = 15;
 * @return {string}
 */
proto.roadmunk.UserUpdatedMessage.prototype.getDeployment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.roadmunk.UserUpdatedMessage.prototype.setDeployment = function(value) {
  jspb.Message.setField(this, 15, value);
};


goog.object.extend(exports, proto.roadmunk);
